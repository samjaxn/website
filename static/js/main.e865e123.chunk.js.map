{"version":3,"sources":["ghostLogo.svg","components/Main.js","components/Background.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ROWS","COLS","NUM_PARTICLES","animation","particle","canvas","list","ctx","tog","man","dx","dy","mx","my","d","t","f","a","b","n","w","h","THICKNESS","Component","Math","pow","SPACING","COLOR","DRAG","EASE","initialized","clickable","vx","vy","x","y","Main","canvasRef","React","useRef","updateWindowDimensions","cancelAnimationFrame","handleOnClick","window","addEventListener","step","Date","cos","sin","tan","i","atan2","ox","oy","createImageData","data","putImageData","drawLogo","requestAnimationFrame","font","textBaseline","textAlign","fillStyle","fillText","e","clickableLink","current","width","innerWidth","height","innerHeight","getContext","floor","j","Object","create","init","open","react_default","createElement","Fragment","ref","onClick","onMouseMove","clientX","clientY","linkX","linkWidth","linkY","linkHeight","document","body","style","cursor","handleMouseAction","onTouchMove","touch","touches","pageX","pageY","handleTouchAction","onTouchEnd","undefined","App","components_Main","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qIAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,kFCKpCC,EACFC,EACAC,EAQAC,EAEAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAtB,0FA3BAuB,GCF8BC,kBDElBC,KAAKC,IAAI,GAAI,IACzBC,EAAU,EACVC,EAAQ,IACRC,EAAO,GACPC,EAAO,GAEPC,GAAc,EAEdC,GAAY,EAqBd3B,EAAW,CACT4B,GAAI,EACJC,GAAI,EACJC,EAAG,EACHC,EAAG,GAGL,IA0KeC,EA1KF,WACT,IAAMC,EAAYC,IAAMC,OAAO,MAEzBC,EAAyB,WAE3BV,GAAc,EACdW,qBAAqBtC,GACrBuC,KAGJC,OAAOC,iBAAiB,SAAUJ,GAClCG,OAAOC,iBAAiB,oBAAqBJ,GAsC7C,SAASK,IAEL,GAAKrC,GAAOA,EAAM,CACTC,IACDM,EAAkB,MAAb,IAAI+B,KACTlC,EAAS,GAAJQ,EAAUI,KAAKuB,IAAQ,IAAJhC,GAAWS,KAAKuB,IAAQ,GAAJhC,GAAWK,EAAI,IAC3DP,EAAS,GAAJQ,EAAUG,KAAKwB,IAAQ,IAAJjC,GAAWS,KAAKyB,IAAIzB,KAAKwB,IAAQ,GAAJjC,IAAYM,EAAI,KAGzE,IAAK,IAAI6B,EAAI,EAAGA,EAAIhD,EAAegD,IAC/BnD,EAAIO,EAAK4C,GAETpC,GAAKJ,EAAKE,EAAKb,EAAEmC,GAAKxB,GAAMC,EAAKE,EAAKd,EAAEoC,GAAKxB,EAC7CK,GAAKM,EAAYR,EAEbA,EAAIQ,IACJP,EAAIS,KAAK2B,MAAMxC,EAAID,GACnBX,EAAEiC,IAAMhB,EAAIQ,KAAKuB,IAAIhC,GACrBhB,EAAEkC,IAAMjB,EAAIQ,KAAKwB,IAAIjC,IAGzBhB,EAAEmC,IAAMnC,EAAEiC,IAAMJ,IAAS7B,EAAEqD,GAAKrD,EAAEmC,GAAKL,EACvC9B,EAAEoC,IAAMpC,EAAEkC,IAAML,IAAS7B,EAAEsD,GAAKtD,EAAEoC,GAAKN,MAG1C,CACDX,GAAKD,EAAIV,EAAI+C,gBAAgBlC,EAAGC,IAAIkC,KAEpC,IAAK,IAAIL,EAAI,EAAGA,EAAIhD,EAAegD,IACnCnD,EAAIO,EAAK4C,GACRhC,EAAGC,EAA0B,KAAnBpB,EAAEmC,IAAMnC,EAAEoC,EAAIf,IAAWF,EAAEC,EAAI,GAAKD,EAAEC,EAAI,GAAKQ,EACzDT,EAAEC,EAAI,GAAK,IAGZZ,EAAIiD,aAAavC,EAAG,EAAG,GACvBwC,IAGJtD,EAAYuD,sBAAsBb,GAGtC,IAAMY,EAAW,WACblD,EAAIoD,KAAO,aACXpD,EAAIqD,aAAe,SACnBrD,EAAIsD,UAAY,SAChBtD,EAAIuD,UAAY,QAChBvD,EAAIwD,SAAS,4BAA6B3C,EAAE,EAAGC,EAAE,IAG/CqB,EAAgB,SAACsB,GACflC,EAQAmC,MA7FJ5D,EAASgC,EAAU6B,SACZC,MAAQxB,OAAOyB,WACtB/D,EAAOgE,OAAS1B,OAAO2B,YACvB/D,EAAMF,EAAOkE,WAAW,MAG5B,WACInD,EAAIf,EAAO8D,MACX9C,EAAIhB,EAAOgE,OAEX5D,GAAM,EACND,GAAM,EAENF,EAAO,GAEPN,EAAOwB,KAAKgD,MAAMpD,EAAEM,GACpBzB,EAAOuB,KAAKgD,MAAMnD,EAAEK,GACpBxB,EAAgB,EAEhB,IAAK,IAAIgD,EAAI,EAAGA,EAAIjD,EAAMiD,IACtB,IAAK,IAAIuB,EAAI,EAAGA,EAAIzE,EAAMyE,KACtB1E,EAAI2E,OAAOC,OAAOvE,IAChB8B,EAAInC,EAAEqD,GAAK1B,EAAU+C,EACvB1E,EAAEoC,EAAIpC,EAAEsD,GAAK3B,EAAUwB,EAEvB5C,EAAKJ,GAAiBH,EACtBG,IA6DJ0E,GACAzE,EAAYuD,sBAAsBb,GAClCf,GAAc,IA8ChBmC,EAAgB,WACflC,GACCY,OAAOkC,KAAK,0CAA2C,WAI/D,OACIC,EAAA7D,EAAA8D,cAAAD,EAAA7D,EAAA+D,SAAA,KACIF,EAAA7D,EAAA8D,cAAA,UACIE,IAAK5C,EACL8B,MAAOxB,OAAOyB,WACdC,OAAQ1B,OAAO2B,YACfY,QAAS,SAAAlB,GAAMtB,EAAcsB,IAC7BmB,YAAa,SAAAnB,IAnDC,SAACA,GAGvB,IAAI9B,EAAI8B,EAAEoB,QACNjD,EAAI6B,EAAEqB,QAGNC,EAAQlE,EAAE,EAAImE,KAEdC,EAAQnE,EAAE,EAAIoE,IAElB7E,EAAKsB,EACLrB,EAAKsB,EAEFD,GAAGoD,GAASpD,GAAMoD,EARL,KAQ2BnD,GAAGqD,GAASrD,GAAKqD,EAN3C,IAObE,SAASC,KAAKC,MAAMC,OAAS,UAC7B9D,GAAU,IAGV2D,SAASC,KAAKC,MAAMC,OAAS,GAC7B9D,GAAU,GA+Ba+D,CAAkB9B,IACrC+B,YAAa,SAAA/B,IA3BC,SAACA,GAGvB,IAAIgC,EAAQhC,EAAEiC,QAAQ,GACtBrF,EAAKoF,EAAME,MACXrF,EAAKmF,EAAMG,MAsBgBC,CAAkBpC,IACrCqC,WAAY,SAAArC,GAnBpBpD,OAAK0F,EACLzF,OAAKyF,OEnLEC,MANf,WACE,OACIzB,EAAA7D,EAAA8D,cAACyB,EAAD,OCKcC,QACW,cAA7B9D,OAAO+D,SAASC,UAEe,UAA7BhE,OAAO+D,SAASC,UAEhBhE,OAAO+D,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOhC,EAAA7D,EAAA8D,cAACgC,EAAD,MAASrB,SAASsB,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.e865e123.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ghostLogo.e124389b.svg\";","import React, { Component } from 'react'\nimport { Row, Col } from 'react-bootstrap'\nimport Background from './Background'\nimport logo from '../ghostLogo.svg';\n\nvar ROWS,\n  COLS,\n  NUM_PARTICLES,\n  THICKNESS = Math.pow(10, 4),\n  SPACING = 5,\n  COLOR = 220,\n  DRAG = 0.9,\n  EASE = 0.2,\n\n  initialized = false,\n  animation,\n  clickable = false,\n  particle,\n  canvas,\n  list,\n  ctx,\n  tog,\n  man,\n  dx,\n  dy,\n  mx,\n  my,\n  d,\n  t,\n  f,\n  a,\n  b,\n  n,\n  w,\n  h,\n  p\n\nparticle = {\n  vx: 0,\n  vy: 0,\n  x: 0,\n  y: 0\n};\n\nconst Main = () => {\n    const canvasRef = React.useRef(null);\n\n    const updateWindowDimensions = () => {\n        //console.log(\"dimensions changed\");\n        initialized = false;\n        cancelAnimationFrame(animation);\n        handleOnClick();\n    }\n\n    window.addEventListener('resize', updateWindowDimensions);\n    window.addEventListener('orientationchange', updateWindowDimensions);\n\n    const createCanvas = () => {\n        canvas = canvasRef.current;\n        canvas.width = window.innerWidth;\n        canvas.height = window.innerHeight;\n        ctx = canvas.getContext(\"2d\");\n    }\n\n    function init() {\n        w = canvas.width;\n        h = canvas.height;\n        \n        man = true;\n        tog = true;\n    \n        list = [];\n\n        ROWS = Math.floor(w/SPACING);\n        COLS = Math.floor(h/SPACING);\n        NUM_PARTICLES = 0;\n    \n        for (let i = 0; i < COLS; i++) {\n            for (let j = 0; j < ROWS; j++){\n                p = Object.create(particle);\n                p.x = p.ox = SPACING * j;\n                p.y = p.oy = SPACING * i;\n    \n                list[NUM_PARTICLES] = p;\n                NUM_PARTICLES++;\n            }\n        }\n        //console.log(ROWS);\n        //console.log(COLS);\n        //console.log(list.length);\n        //console.log(NUM_PARTICLES);\n    }\n    \n    function step() {\n    \n        if ((tog = !tog)) {\n            if (!man) {\n                t = +new Date() * 0.001;\n                mx = w * 0.5 + Math.cos(t * 2.1) * Math.cos(t * 0.9) * w * 0.45;\n                my = h * 0.5 + Math.sin(t * 3.2) * Math.tan(Math.sin(t * 0.8)) * h * 0.45;\n            }\n        \n            for (let i = 0; i < NUM_PARTICLES; i++) {\n                p = list[i];\n        \n                d = (dx = mx - p.x) * dx + (dy = my - p.y) * dy;\n                f = -THICKNESS / d;\n        \n                if (d < THICKNESS) {\n                    t = Math.atan2(dy, dx);\n                    p.vx += f * Math.cos(t);\n                    p.vy += f * Math.sin(t);\n                }\n        \n                p.x += (p.vx *= DRAG) + (p.ox - p.x) * EASE;\n                p.y += (p.vy *= DRAG) + (p.oy - p.y) * EASE;\n            }\n        } \n        else {\n            b = (a = ctx.createImageData(w, h)).data;\n    \n            for (let i = 0; i < NUM_PARTICLES; i++) {\n            p = list[i];\n            (b[(n = (~~p.x + ~~p.y * w) * 4)] = b[n + 1] = b[n + 2] = COLOR);\n            (b[n + 3] = 255);\n            }\n    \n            ctx.putImageData(a, 0, 0);\n            drawLogo();\n        }\n    \n        animation = requestAnimationFrame(step);\n    }\n\n    const drawLogo = () => {\n        ctx.font = \"15px Arial\";\n        ctx.textBaseline = 'middle';\n        ctx.textAlign = \"center\";\n        ctx.fillStyle = 'white';\n        ctx.fillText(\"G H O S T   A T E L I E R\", w/2, h/2);\n    }\n\n    const handleOnClick = (e) => {\n        if(!initialized){\n            createCanvas();\n            init();\n            animation = requestAnimationFrame(step);\n            initialized = true;\n        }\n        else{\n            //console.log(`x: ${e.clientX}, y: ${e.clientY}`);\n            clickableLink();\n        }\n    }\n\n    const handleMouseAction = (e) => {\n        //console.log(\"handleMouseAction\");\n        //console.log(`x: ${e.clientX}, y: ${e.clientY}`)\n        let x = e.clientX;\n        let y = e.clientY;\n\n        let linkWidth = 175;\n        let linkX = w/2 - linkWidth/2;\n        let linkHeight = 17;\n        let linkY = h/2 - linkHeight/2;\n\n        mx = x;\n        my = y;\n\n        if(x>=linkX && x <= (linkX + linkWidth) && y>=linkY && y<= (linkY + linkHeight)){\n            document.body.style.cursor = \"pointer\";\n            clickable=true;\n        }\n        else{\n            document.body.style.cursor = \"\";\n            clickable=false;\n        }\n        \n    }\n\n    const handleTouchAction = (e) => {\n        //console.log(\"handleMouseAction\");\n        //console.log(`x: ${e.clientX}, y: ${e.clientY}`)\n        var touch = e.touches[0];\n        mx = touch.pageX;\n        my = touch.pageY;\n    }\n\n    const handleTouchEnd = (e) => {\n        mx = undefined;\n        my = undefined;\n    }\n\n    const clickableLink = () => {\n        if(clickable){\n            window.open('https://www.instagram.com/ghostatelier/', '_blank');\n        }\n    }\n\n    return (\n        <>\n            <canvas\n                ref={canvasRef}\n                width={window.innerWidth}\n                height={window.innerHeight}\n                onClick={e => {handleOnClick(e)}}\n                onMouseMove={e => {handleMouseAction(e)}}\n                onTouchMove={e => {handleTouchAction(e)}}\n                onTouchEnd={e=> {handleTouchEnd(e)}}\n            />\n        </>\n    )\n}\n\nexport default Main\n","import React, { Component } from 'react'\nimport { Row, Col } from 'react-bootstrap'\n//import particlesBG from '../js/particles'\n\n\n\nexport class Background extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            width: 0,\n            height: 0,\n            particlesArray: []\n        };\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n        this.bgRef = React.createRef();\n    }\n\n    componentDidMount(){\n        this.updateWindowDimensions();\n        window.addEventListener('resize', this.updateWindowDimensions);\n        let canvas = document.createElement(\"canvas\");\n        //script.src = particlesBG;\n        //script.async = true;\n\n        //document.body.appendChild(script);\n    }\n      \n    componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowDimensions);\n    }\n    \n    updateWindowDimensions() {\n    this.setState({ width: window.innerWidth, height: window.innerHeight, particlesArray: this.updateParticlesArray(window.innerWidth, window.innerHeight) });\n    console.log(`height: ${this.state.height}`);\n    console.log(`width: ${this.state.width}`);\n    console.log(JSON.stringify(this.state.particlesArray));\n    }\n\n    updateParticlesArray(width, height){\n        console.log(`updated`);\n        let arr = [];\n        let ctx = this.canvas.getContext(\"2d\");\n        let particle = {\n            vx: 0,\n            vy: 0,\n            x: 0,\n            y: 0\n        };\n\n        const w = Math.floor(width/10);\n        const h = Math.floor(height/10);\n        \n        for(let i = 0; i < h; i++){\n            for(let j = 0; j < w; j++){\n                let p = Object.create(particle);\n                p.x = p.ox = 10 * j;\n                p.y = p.oy = 10 * i;\n\n                arr.push(p); \n            }\n        }\n        return arr;\n    }\n\n    render() {\n        return (\n            <div>\n                <canvas>\n                    <h1>{this.state.height}</h1>\n                    <h1>{this.state.width}</h1>\n                </canvas>\n            </div>\n        )\n    }\n}\n\nexport default Background\n","import React from 'react';\nimport './App.css';\nimport Main from './components/Main';\nimport Container from 'react-bootstrap/Container'\n\nfunction App() {\n  return (\n      <Main />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}